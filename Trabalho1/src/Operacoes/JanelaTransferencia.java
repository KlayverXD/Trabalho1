/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Operacoes;

import Contas.Operacoes;
import Trabalho1.ContaEspecial;
import Trabalho1.ContaPoupanca;
import Trabalho1.Contas;
import javax.swing.JOptionPane;

/**
 *
 * @author klayv
 */
public class JanelaTransferencia extends javax.swing.JFrame {

    /**
     * Creates new form JanelaTransferencia
     */
    Contas obj1;
    ContaPoupanca obj2;
    ContaEspecial obj3;

    public JanelaTransferencia(Contas obj1, ContaPoupanca obj2, ContaEspecial obj3) {
        initComponents();
        this.obj1 = obj1;
        this.obj2 = obj2;
        this.obj3 = obj3;
        setLocationRelativeTo(null);
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        num1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        num2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        valorTrans = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Digite o número da primeira conta:");

        jLabel2.setText("Digite o número da segunda conta:");

        jLabel3.setText("Digite o valor a ser transferido:");

        jButton1.setText("Confirmar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(num1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(num2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(valorTrans, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(94, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(num1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(num2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valorTrans, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int n1 = Integer.parseInt(num1.getText());
        int n2 = Integer.parseInt(num2.getText());
        double valorTransferir = Double.parseDouble(valorTrans.getText());

        if (n1 == obj1.getNumero() && n2 == obj2.getNumero()) {
            int yn = JOptionPane.showConfirmDialog(null, obj1.getNome() + " ,deseja confirmar a transferência?", "", JOptionPane.YES_NO_OPTION);

            if (yn == JOptionPane.YES_OPTION) {

                if (valorTransferir <= obj1.getSaldo()) {

                    obj1.transferir(n1, n2, valorTransferir);
                    obj2.setSaldo(valorTransferir);
                    JOptionPane.showMessageDialog(null, "A transferência foi realizada com sucesso!");

                } else {
                    JOptionPane.showMessageDialog(null, "Valor a transferir maior que saldo.");
                }

                new Operacoes(obj1, obj2, obj3).setVisible(true);
                this.dispose();

            } else if (yn == JOptionPane.NO_OPTION) {

                new Operacoes(obj1, obj2, obj3).setVisible(true);
                this.dispose();
            }

        } else if (n1 == obj2.getNumero() && n2 == obj1.getNumero()) {

            int yn = JOptionPane.showConfirmDialog(null, obj1.getNome() + " ,deseja confirmar a transferência?", "", JOptionPane.YES_NO_OPTION);

            if (yn == JOptionPane.YES_OPTION) {

                if (valorTransferir < obj2.getSaldo()) {

                    obj2.transferir(n1, n2, valorTransferir);
                    obj1.setSaldo(valorTransferir);

                    JOptionPane.showMessageDialog(null, "A transferência foi realizada com sucesso!");
                } else {
                    JOptionPane.showMessageDialog(null, "Valor a transferir maior que saldo.");
                }

                new Operacoes(obj1, obj2, obj3).setVisible(true);

                this.dispose();

            } else if (yn == JOptionPane.NO_OPTION) {

                new Operacoes(obj1, obj2, obj3).setVisible(true);
                this.dispose();
            }
        } else if (n1 == obj1.getNumero() && n2 == obj3.getNumero()) {

            int yn = JOptionPane.showConfirmDialog(null, obj1.getNome() + " ,deseja confirmar a transferência?", "", JOptionPane.YES_NO_OPTION);

            if (yn == JOptionPane.YES_OPTION) {

                if (valorTransferir < obj1.getSaldo()) {

                    obj1.transferir(n1, n2, valorTransferir);
                    obj3.setSaldo(valorTransferir);
                    JOptionPane.showMessageDialog(null, "A transferência foi realizada com sucesso!");

                } else {
                    JOptionPane.showMessageDialog(null, "Valor a transferir maior que saldo.");
                }

                new Operacoes(obj1, obj2, obj3).setVisible(true);
                this.dispose();

            } else if (yn == JOptionPane.NO_OPTION) {

                new Operacoes(obj1, obj2, obj3).setVisible(true);
                this.dispose();
            }
        } else if (n1 == obj3.getNumero() && n2 == obj1.getNumero()) {

            int yn = JOptionPane.showConfirmDialog(null, obj1.getNome() + " ,deseja confirmar a transferência?", "", JOptionPane.YES_NO_OPTION);

            if (yn == JOptionPane.YES_OPTION) {

                if (valorTransferir < obj3.getSaldo()) {

                    obj3.transferir(n1, n2, valorTransferir);
                    obj1.setSaldo(valorTransferir);
                    JOptionPane.showMessageDialog(null, "A transferência foi realizada com sucesso!");

                } else {
                    JOptionPane.showMessageDialog(null, "Valor a transferir maior que saldo.");
                }

                new Operacoes(obj1, obj2, obj3).setVisible(true);
                this.dispose();

            } else if (yn == JOptionPane.NO_OPTION) {

                new Operacoes(obj1, obj2, obj3).setVisible(true);
                this.dispose();
            }

        } else if (n1 == obj2.getNumero() && n2 == obj3.getNumero()) {

            int yn = JOptionPane.showConfirmDialog(null, obj1.getNome() + " ,deseja confirmar a transferência?", "", JOptionPane.YES_NO_OPTION);

            if (yn == JOptionPane.YES_OPTION) {

                if (valorTransferir < obj1.getSaldo()) {

                    obj2.transferir(n1, n2, valorTransferir);
                    obj3.setSaldo(valorTransferir);
                    JOptionPane.showMessageDialog(null, "A transferência foi realizada com sucesso!");

                } else {
                    JOptionPane.showMessageDialog(null, "Valor a transferir maior que saldo.");
                }

                new Operacoes(obj1, obj2, obj3).setVisible(true);
                this.dispose();

            } else if (yn == JOptionPane.NO_OPTION) {

                new Operacoes(obj1, obj2, obj3).setVisible(true);
                this.dispose();
            }

        } else if (n1 == obj3.getNumero() && n2 == obj2.getNumero()) {

            int yn = JOptionPane.showConfirmDialog(null, obj1.getNome() + " ,deseja confirmar a transferência?", "", JOptionPane.YES_NO_OPTION);

            if (yn == JOptionPane.YES_OPTION) {

                if (valorTransferir < obj3.getSaldo()) {

                    obj3.transferir(n1, n2, valorTransferir);
                    obj2.setSaldo(valorTransferir);
                    JOptionPane.showMessageDialog(null, "A transferência foi realizada com sucesso!");

                } else {
                    JOptionPane.showMessageDialog(null, "Valor a transferir maior que saldo.");

                }
                new Operacoes(obj1, obj2, obj3).setVisible(true);
                this.dispose();

            } else if (yn == JOptionPane.NO_OPTION) {

                new Operacoes(obj1, obj2, obj3).setVisible(true);
                this.dispose();
            }
        }//GEN-LAST:event_jButton1ActionPerformed
    }
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField num1;
    private javax.swing.JTextField num2;
    private javax.swing.JTextField valorTrans;
    // End of variables declaration//GEN-END:variables
}
